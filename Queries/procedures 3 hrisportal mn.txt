CREATE OR ALTER     PROCEDURE [hrisportal].[sp_view_employees]
AS
BEGIN
SELECT e.email,u.full_name,u.phone_number,job_title, department,salary,date_of_joining,e.active_yn
FROM hrisportal.employee AS e
INNER JOIN hrisportal.users AS u
ON e.user_id=u.user_id
ORDER BY e.active_yn DESC
END

GO



CREATE OR ALTER PROCEDURE hrisportal.sp_validate_fp_token
@fp_token VARCHAR(100)
AS
BEGIN
	DECLARE @ucount INT = 0,
	 @ecount INT = 0,
	 @hcount INT = 0
	 
	 SELECT @ucount=count(*) 
	 FROM hrisportal.users
	 WHERE fp_token=@fp_token
	 AND fp_time_to_expire>GETDATE()

	 SELECT @ecount=count(*) 
	 FROM hrisportal.employee
	 WHERE fp_token=@fp_token
	 AND fp_time_to_expire>GETDATE()

	 SELECT @hcount=count(*) 
	 FROM hrisportal.hr
	 WHERE fp_token=@fp_token
	 AND fp_time_to_expire>GETDATE()


	 IF @ucount=1 AND @ecount=0 AND @hcount=0
	 BEGIN
		SELECT -1 AS validYN
	END
	ELSE IF @ucount=0 AND @ecount=1 AND @hcount=0
	 BEGIN
		SELECT 0 AS validYN
	END

	ELSE IF @ucount=0 AND @ecount=0 AND @hcount=1
	 BEGIN
		SELECT 1 AS validYN
	END

	ELSE 
	BEGIN
		SELECT -2 AS validYN
	END

END





CREATE OR ALTER PROCEDURE hrisportal.sp_reset_pwd
@token VARCHAR(100),
@pwd NVARCHAR(100),
@role INT
AS
BEGIN
	DECLARE @hashed_pwd VARBINARY(MAX)

	SELECT @hashed_pwd=HASHBYTES('SHA2_256',@pwd)
	IF @role=-1
	BEGIN
		UPDATE hrisportal.users
		SET password=@hashed_pwd
		WHERE fp_token=@token
		AND fp_time_to_expire>GETDATE()
	END

	IF @role=0
	BEGIN
		UPDATE hrisportal.employee
		SET password=@hashed_pwd
		WHERE fp_token=@token
		AND fp_time_to_expire>GETDATE()
	END

	IF @role=1
	BEGIN
		UPDATE hrisportal.hr
		SET password=@hashed_pwd
		WHERE fp_token=@token
		AND fp_time_to_expire>GETDATE()
	END
END





CREATE OR ALTER PROCEDURE hrisportal.sp_get_eid_from_email
@email VARCHAR(100)
AS
BEGIN
	SELECT employee_id
	FROM hrisportal.employee
	WHERE email=@email
END









CREATE OR ALTER PROCEDURE hrisportal.sp_count_emp_in_dept
AS
BEGIN
	SELECT count(*) AS count,department_name
	FROM hrisportal.department AS d
	INNER JOIN hrisportal.employee AS e
	ON d.department_name = e.department
	GROUP BY d.department_name
	
END


CREATE OR ALTER   PROCEDURE [hrisportal].[sp_insert_new_employee_skill]
@skill_name VARCHAR(MAX),
@emp_id INT
AS
BEGIN
	DECLARE @new_skill_id INT
	INSERT INTO hrisportal.skill(skill_name)
	SELECT @skill_name
	WHERE NOT EXISTS (
		SELECT 1
		FROM hrisportal.skill
		WHERE skill_name = @skill_name
	);

	SELECT @new_skill_id=SCOPE_IDENTITY();

		IF @new_skill_id IS NULL
			INSERT INTO hrisportal.employee_skill(emp_id,skill_id)
			SELECT @emp_id,(SELECT skill_id 
			FROM hrisportal.skill WHERE skill_name=@skill_name)
			WHERE NOT EXISTS (
				SELECT 1
				FROM hrisportal.employee_skill
				WHERE skill_id = (SELECT TOP 1 skill_id
					FROM hrisportal.skill WHERE skill_name=@skill_name)
				AND emp_id=@emp_id
		)
		ELSE
			INSERT INTO hrisportal.employee_skill(emp_id,skill_id)
			VALUES (@emp_id,@new_skill_id)

SELECT @@ROWCOUNT AS validYN
	

END
GO



CREATE OR ALTER     PROCEDURE [hrisportal].[sp_view_applications]
AS
BEGIN
	SELECT a.*,u.full_name ,j.job_title 
	FROM hrisportal.applicants a
	inner join hrisportal.job_vacancy j 
	on j.j_id=a.j_id 
	inner join hrisportal.users u
	on a.user_id=u.user_id
	WHERE j.active_yn='Y'
END
GO






CREATE OR ALTER       PROCEDURE [hrisportal].[sp_validate_token]
@token VARCHAR(MAX),
@id INT 
AS
BEGIN
	DECLARE @count int=0,@ecount int=0,@hcount int =0
	select @count=count(*) from hrisportal.users where token=@token and user_id=@id and time_to_expire>GETDATE()
	select @ecount=count(*) from hrisportal.employee where token=@token and employee_id=@id and time_to_expire>GETDATE()
	select @hcount=count(*) from hrisportal.hr where token=@token and hr_id=@id and time_to_expire>GETDATE()
	IF @count = 1 and @ecount=0 and @hcount=0
	BEGIN
		select -1 as ValidYN
		UPDATE hrisportal.users
		SET time_to_expire = DATEADD(minute, 30, GETDATE())
		WHERE user_id = @id;

	END
	ELSE IF @count = 0 and @ecount=1 and @hcount=0
	BEGIN
		select 0 as ValidYN
		UPDATE hrisportal.employee
		SET time_to_expire = DATEADD(minute, 30, GETDATE())
		WHERE employee_id = @id;
	END
	ELSE IF @count = 0 and @ecount=0 and @hcount=1
	BEGIN
		select 1 as ValidYN
		UPDATE hrisportal.hr
		SET time_to_expire = DATEADD(minute, 30, GETDATE())
		WHERE hr_id = @id;
	END
	ELSE
	BEGIN
		print @count
		print @ecount
		print @hcount
		SELECT -2 as ValidYN
	END
END

GO

